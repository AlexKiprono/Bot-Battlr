{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/alex/Development/code/se-prep/phase-2/Bot-Battlr/src/components/BotsPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport BotCollection from \"./BotCollection\";\n\nfunction BotsPage() {\n  _s();\n\n  const [bots, setBots] = useState([]);\n  const [yourBots, setYourBots] = useState([]);\n  useEffect(() => {\n    fetch(`https://bot-battlr-8wp9.onrender.com/bots`).then(res => res.json()).then(data => setBots(data)).catch(error => console.error(\"Error fetching bots:\", error));\n  }, []);\n\n  const addToYourArmy = bot => {\n    if (!yourBots.some(b => b.id === bot.id)) {\n      setYourBots([...yourBots, bot]);\n    }\n  };\n\n  const removeBot = bot => {\n    setYourBots(yourBots.filter(yourBot => yourBot.id !== bot.id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!Array.isArray(bots) || bots.length === 0 ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 52\n    }, this) : null, /*#__PURE__*/_jsxDEV(YourBotArmy, {\n      bots: yourBots,\n      removeBot: removeBot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), Array.isArray(bots) && bots.length > 0 && /*#__PURE__*/_jsxDEV(BotCollection, {\n      bots: bots,\n      botFunction: addToYourArmy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 50\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BotsPage, \"2Z69xAVePvpjBHPFZXgIDPyEGts=\");\n\n_c = BotsPage;\nexport default BotsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"BotsPage\");","map":{"version":3,"sources":["/home/alex/Development/code/se-prep/phase-2/Bot-Battlr/src/components/BotsPage.js"],"names":["React","useEffect","useState","YourBotArmy","BotCollection","BotsPage","bots","setBots","yourBots","setYourBots","fetch","then","res","json","data","catch","error","console","addToYourArmy","bot","some","b","id","removeBot","filter","yourBot","Array","isArray","length"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,KAAK,CAAE,2CAAF,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,IAAI,IAAIP,OAAO,CAACO,IAAD,CAFvB,EAGGC,KAHH,CAGSC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAc,sBAAd,EAAsCA,KAAtC,CAHlB;AAID,GALQ,EAKN,EALM,CAAT;;AAOA,QAAME,aAAa,GAAIC,GAAD,IAAS;AAC7B,QAAI,CAACX,QAAQ,CAACY,IAAT,CAAcC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASH,GAAG,CAACG,EAAhC,CAAL,EAA0C;AACxCb,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcW,GAAd,CAAD,CAAX;AACD;AACF,GAJD;;AAMA,QAAMI,SAAS,GAAIJ,GAAD,IAAS;AACzBV,IAAAA,WAAW,CAACD,QAAQ,CAACgB,MAAT,CAAgBC,OAAO,IAAIA,OAAO,CAACH,EAAR,KAAeH,GAAG,CAACG,EAA9C,CAAD,CAAX;AACD,GAFD;;AAIA,sBACE;AAAA,eACG,CAACI,KAAK,CAACC,OAAN,CAAcrB,IAAd,CAAD,IAAwBA,IAAI,CAACsB,MAAL,KAAgB,CAAxC,gBAA4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA5C,GAAkE,IADrE,eAEE,QAAC,WAAD;AAAa,MAAA,IAAI,EAAEpB,QAAnB;AAA6B,MAAA,SAAS,EAAEe;AAAxC;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGG,KAAK,CAACC,OAAN,CAAcrB,IAAd,KAAuBA,IAAI,CAACsB,MAAL,GAAc,CAArC,iBAA0C,QAAC,aAAD;AAAe,MAAA,IAAI,EAAEtB,IAArB;AAA2B,MAAA,WAAW,EAAEY;AAAxC;AAAA;AAAA;AAAA;AAAA,YAH7C;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GA5BQb,Q;;KAAAA,Q;AA8BT,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport BotCollection from \"./BotCollection\";\n\nfunction BotsPage() {\n  const [bots, setBots] = useState([]);\n  const [yourBots, setYourBots] = useState([])\n\n  useEffect(() => {\n    fetch(`https://bot-battlr-8wp9.onrender.com/bots`)\n      .then(res => res.json())\n      .then(data => setBots(data))\n      .catch(error => console.error(\"Error fetching bots:\", error));\n  }, [])\n\n  const addToYourArmy = (bot) => {\n    if (!yourBots.some(b => b.id === bot.id)) {\n      setYourBots([...yourBots, bot]);\n    }\n  }\n\n  const removeBot = (bot) => {\n    setYourBots(yourBots.filter(yourBot => yourBot.id !== bot.id));\n  }\n\n  return (\n    <div>\n      {!Array.isArray(bots) || bots.length === 0 ? <h1>Loading...</h1> : null}\n      <YourBotArmy bots={yourBots} removeBot={removeBot}/>\n      {Array.isArray(bots) && bots.length > 0 && <BotCollection bots={bots} botFunction={addToYourArmy}/>}\n    </div>\n  )\n}\n\nexport default BotsPage;\n"]},"metadata":{},"sourceType":"module"}