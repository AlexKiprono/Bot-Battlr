{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/alex/Development/code/se-prep/phase-2/Bot-Battlr/src/components/BotCollection.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\n\nfunction BotCollection({\n  addToArmy\n}) {\n  _s();\n\n  const [allBotsData, setAllBotsData] = useState([]);\n  useEffect(() => {\n    const getAllBots = async url => {\n      try {\n        const response = await fetch(url);\n\n        if (!response.ok) {\n          throw new Error(`${response.status}: ${response.statusText}`);\n        } else {\n          const data = await response.json();\n          setAllBotsData(data);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    getAllBots(\"http://localhost:8002/bots\");\n  }, []);\n\n  const handleAddToArmy = bot => {\n    addToArmy(bot);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"all-bots-container\",\n    children: allBotsData.map(({\n      id,\n      name,\n      health,\n      damage,\n      armor,\n      bot_class,\n      catchphrase,\n      avatar_url\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `bot-container ${bot_class}`,\n      onClick: () => handleAddToArmy({\n        id,\n        name,\n        health,\n        damage,\n        armor,\n        bot_class,\n        catchphrase,\n        avatar_url\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"img-div\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: avatar_url,\n          alt: name,\n          width: \"100\",\n          height: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"bot-name\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: catchphrase\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bot-container-footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-heart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this), \" \", health]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-bolt\",\n            style: {\n              color: \"#ef1515\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), \" \", damage]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-shield-alt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this), \" \", armor]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BotCollection, \"vzYKd/NhgCuL9YaRqsYL9aBo524=\");\n\n_c = BotCollection;\nexport default BotCollection;\n\nvar _c;\n\n$RefreshReg$(_c, \"BotCollection\");","map":{"version":3,"sources":["/home/alex/Development/code/se-prep/phase-2/Bot-Battlr/src/components/BotCollection.js"],"names":["React","useState","useEffect","BotCollection","addToArmy","allBotsData","setAllBotsData","getAllBots","url","response","fetch","ok","Error","status","statusText","data","json","error","console","handleAddToArmy","bot","map","id","name","health","damage","armor","bot_class","catchphrase","avatar_url","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction BotCollection({ addToArmy }) {\n  const [allBotsData, setAllBotsData] = useState([]);\n\n  useEffect(() => {\n    const getAllBots = async (url) => {\n      try {\n        const response = await fetch(url);\n\n        if (!response.ok) {\n          throw new Error(`${response.status}: ${response.statusText}`);\n        } else {\n          const data = await response.json();\n          setAllBotsData(data);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    getAllBots(\"http://localhost:8002/bots\");\n  }, []);\n\n  const handleAddToArmy = (bot) => {\n    addToArmy(bot);\n  };\n\n  return (\n    <div className=\"all-bots-container\">\n      {/* Collection of all bots */}\n      {allBotsData.map(\n        ({\n          id,\n          name,\n          health,\n          damage,\n          armor,\n          bot_class,\n          catchphrase,\n          avatar_url,\n        }) => (\n          <div\n            className={`bot-container ${bot_class}`}\n            key={id}\n            onClick={() =>\n              handleAddToArmy({\n                id,\n                name,\n                health,\n                damage,\n                armor,\n                bot_class,\n                catchphrase,\n                avatar_url,\n              })\n            }\n          >\n            <div className=\"img-div\">\n              <img src={avatar_url} alt={name} width=\"100\" height=\"100\" />\n            </div>\n            <p className=\"bot-name\">{name}</p>\n            <p>{catchphrase}</p>\n            <div className=\"bot-container-footer\">\n              <div>\n                <i className=\"fas fa-heart\"></i> {health}\n              </div>\n              <div>\n              <i className=\"fas fa-bolt\" style={{ color: \"#ef1515\" }}></i> {damage}\n              </div>\n              <div>\n                <i className=\"fas fa-shield-alt\"></i> {armor}\n              </div>\n            </div>\n          </div>\n        )\n      )}\n    </div>\n  );\n}\n\nexport default BotCollection;"]},"metadata":{},"sourceType":"module"}